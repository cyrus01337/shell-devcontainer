name: Pipeline

on:
    pull_request:
    push:
        branches: ["*"]
        paths:
            - "Dockerfile"
            - "*.sh"
            - ".github/workflows/**"
    repository_dispatch:

jobs:
    publish:
        name: Publish to Docker Hub
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0
                  submodules: "recursive"

            - name: Extract project metadata
              env:
                  AUTHOR: ${{ vars.DOCKER_HUB_USERNAME }}
                  GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
              run: |
                  declare -a split_by_slash=()

                  IFS="/" read -ra split_by_slash <<< "$GITHUB_REPOSITORY"

                  REAL_AUTHOR=${AUTHOR:-${split_by_slash[0]}}

                  echo "AUTHOR=$REAL_AUTHOR" >> "$GITHUB_ENV"
                  echo "TAG=$REAL_AUTHOR/shell-devcontainer" >> "$GITHUB_ENV"

            - uses: docker/setup-buildx-action@v3
              name: Setup Docker Buildx

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.AUTHOR }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Publish Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: ${{ env.TAG }}

    dispatch:
        name: Dispatch build event
        runs-on: ubuntu-latest
        needs: publish

        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0
                  submodules: "recursive"

            - name: Parse short commit hash
              id: commit-hash
              run: |
                SHORT_COMMIT_HASH="$(git rev-parse --short HEAD)"

                echo "SHORT_COMMIT_HASH=$SHORT_COMMIT_HASH" >> "$GITHUB_ENV"

            - name: Dispatch build event to cyrus01337/neovim-devcontainer
              env:
                WORKFLOW_DISPATCH_TOKEN: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
              run: |
                status_code=$(
                    curl -L \
                        -X POST \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer $WORKFLOW_DISPATCH_TOKEN" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        https://api.github.com/repos/cyrus01337/neovim-devcontainer/dispatches \
                        -d '{"event_type":"Handle build request (shell-devcontainer@${{ env.SHORT_COMMIT_HASH }})"}' \
                        | jq ".status" \
                        | sed -E 's/"(.+)"/\1/'
                )

                if [[ $status_code ]]; then
                    echo "Request status code: $status_code..."

                   exit 1
                fi
